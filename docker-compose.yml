version: '3.8'

services:
  messaging-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: advanced-messaging-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - messaging-network
    healthcheck:
      test: [ "CMD", "node", "-e", "require('http').get('http://localhost:8080/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: messaging-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - messaging-network

  # Optional: Nginx reverse proxy (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: messaging-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - messaging-server
  #   networks:
  #     - messaging-network

networks:
  messaging-network:
    driver: bridge

volumes:
  # redis_data:
  #   driver: local
